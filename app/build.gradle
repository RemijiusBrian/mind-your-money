plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("kotlin-kapt")
    id("com.google.dagger.hilt.android")
    id("kotlin-parcelize")
}

android {
    namespace 'dev.ridill.mym'
    compileSdk 34

    defaultConfig {
        applicationId "dev.ridill.mym"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"

        buildConfigField('String', 'REPO_URL', gitHubRepoUrl)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.4'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.material3.ExperimentalMaterial3Api"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.animation.ExperimentalAnimationApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.foundation.ExperimentalFoundationApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.foundation.layout.ExperimentalLayoutApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    kotlinOptions.freeCompilerArgs += ["-opt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi"]
//    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.ui.ExperimentalComposeUiApi"]
//    kotlinOptions.freeCompilerArgs += ["-opt-in=androidx.compose.ui.unit.ExperimentalUnitApi"]
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

    def composeBom = platform('androidx.compose:compose-bom:2023.06.01')
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation("androidx.compose.ui:ui")
    implementation('androidx.compose.material3:material3:1.2.0-alpha03')
    implementation("androidx.compose.material3:material3-window-size-class")
    // Material Icons
    implementation("androidx.compose.material:material-icons-core")
    implementation("androidx.compose.material:material-icons-extended")
    // Preview Support
    debugImplementation("androidx.compose.ui:ui-tooling")
    implementation("androidx.compose.ui:ui-tooling-preview")
    // Integrations
    implementation('androidx.activity:activity-compose:1.7.2')
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1")
    implementation("androidx.compose.runtime:runtime-livedata")

    // Accompanist
    def accompanist_version = "0.30.0"
    implementation("com.google.accompanist:accompanist-flowlayout:$accompanist_version")
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"

    // Compose UI Tests
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-test-manifest")

    // Compose Navigation
    def nav_version = '2.6.0'
    implementation("androidx.navigation:navigation-compose:$nav_version")

    // Splash Screen
    implementation("androidx.core:core-splashscreen:1.0.1")

    // Preferences DataStore
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // Room Persistence
    def room_version = '2.5.2'
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    // Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // Dagger Hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    // Integration with Work Manager
    implementation("androidx.hilt:hilt-work:1.0.0")
    kapt("androidx.hilt:hilt-compiler:1.0.0")
    // Integration with Compose Navigation
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")

    // Work Manager
    implementation("androidx.work:work-runtime-ktx:2.8.1")

    // Kotlin Coroutines
    def coroutines_version = '1.7.1'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")
    implementation("com.github.Zhuinden:flow-combinetuple-kt:1.1.1")

    // Lifecycle Components
    def lifecycle_version = '2.6.1'
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version")

    // Timber Logging
    implementation("com.jakewharton.timber:timber:5.0.1")

    // Lottie
    implementation('com.airbnb.android:lottie-compose:6.0.1')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

kapt {
    correctErrorTypes = true
}